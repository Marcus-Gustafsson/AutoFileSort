
name: CI (simple, UV)

on:
  push:
    branches: [ "main" ]         # run on pushes to main
  pull_request:
    branches: [ "main" ]         # and on PRs targeting main

jobs:
  checks:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ["3.12"]
    # Runs on the given OS in the matrix/array above
    runs-on: ${{ matrix.os }}
    steps:
      # Pulls your repo code so later steps can see files.
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      # Select the given Python versions available on the runner.

      - name: 📦 Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          uv --version
        # Installs UV and adds it to PATH for later steps.

      - name: 🧪 Create venv & install deps (UV)
        run: uv sync --all-extras --dev
        # Uses UV for a fast, isolated environment.

      # - name: ✅ Tests (pytest)
      #  run: uv run pytest -q
         # Runs tests from the .venv without activating it explicitly.

      - name: 🧹 Lint (ruff)
        run: uv run ruff check .
        # Fast linter; fails CI if issues remain.

      - name: 🎨 Format check (black)
        run: uv run black --check .
        # Verifies formatting; locally, run `uv run black .` to auto-fix.

      - name: Type check (mypy)
        run: uv run mypy .
        # Catches type errors early (makes python more statically typed, like Go)

      # - name: 🛡️ Security (bandit)
      #   run: uv run bandit -q -r .
      #   # CHANGE 'app' to your code path: '.', 'my_app', or 'src/my_app'.

      # - name: 🔍 Dependency vulnerabilities (pip-audit)
      #   run: uv run pip-audit
      #   # Scans installed packages against known CVEs (requires internet).
